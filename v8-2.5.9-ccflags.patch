diff -uNr -uNr v8-3.2.5.1.orig//SConstruct v8-3.2.5.1/SConstruct
--- v8-3.2.5.1.orig//SConstruct	2011-04-08 11:23:42.326070314 +0200
+++ v8-3.2.5.1/SConstruct	2011-04-08 11:25:05.636192510 +0200
@@ -940,6 +940,13 @@
     self.build_snapshot = (options['snapshot'] == 'on')
     self.flags = None
 
+  def OverrideFlags(self, initial, overrides):
+    result = initial.copy()
+    for key in initial.keys():
+      if overrides.has_key(key):
+        result[key] = overrides[key];
+    return result
+
   def AddRelevantFlags(self, initial, flags):
     result = initial.copy()
     toolchain = self.options['toolchain']
@@ -1059,14 +1066,23 @@
   except KeyError:
     pass
 
-  library_flags = context.AddRelevantFlags(user_environ, LIBRARY_FLAGS)
+  library_flags = context.AddRelevantFlags({}, LIBRARY_FLAGS)
   v8_flags = context.AddRelevantFlags(library_flags, V8_EXTRA_FLAGS)
   mksnapshot_flags = context.AddRelevantFlags(library_flags, MKSNAPSHOT_EXTRA_FLAGS)
   dtoa_flags = context.AddRelevantFlags(library_flags, DTOA_EXTRA_FLAGS)
   cctest_flags = context.AddRelevantFlags(v8_flags, CCTEST_EXTRA_FLAGS)
-  sample_flags = context.AddRelevantFlags(user_environ, SAMPLE_FLAGS)
+  sample_flags = context.AddRelevantFlags({}, SAMPLE_FLAGS)
   d8_flags = context.AddRelevantFlags(library_flags, D8_FLAGS)
 
+  library_flags = context.OverrideFlags(library_flags, user_environ)
+  v8_flags = context.OverrideFlags(v8_flags, user_environ)
+  mksnapshot_flags = context.OverrideFlags(mksnapshot_flags, user_environ)
+  dtoa_flags = context.OverrideFlags(dtoa_flags, user_environ)
+  cctest_flags = context.OverrideFlags(cctest_flags, user_environ)
+  sample_flags = context.OverrideFlags(sample_flags, user_environ)
+  d8_flags = context.OverrideFlags(d8_flags, user_environ)
+
+
   context.flags = {
     'v8': v8_flags,
     'mksnapshot': mksnapshot_flags,
